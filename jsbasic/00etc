//빠른출력

let answer = '';
/*
여러 출력 결과를 한 줄에 하나씩 출력할 때 매 번 console.log()를 실행하지 않고,
하나의 문자열에 결과를 저장해서 한꺼번에 출력하는 것이 대개 더 빠르게 수행됩니다.
*/
console.log(answer+'&')
for (let i = 1; i <= 3; i++) {
    answer += i + '\n';  // 문자열로 변환하여 기록
}
console.log(answer);
console.log(typeof(answer))

// Numbuer -> String -> String && Parseint()

let a= '777';
let b= Number(a);
let c= String(b)


//array.prototype.reduce() -> 배열의 모든 원소에 대한 특정연산을 순차적으로 적용....

/*
reduce() 메서드는 배열의 각 요소에 대해 reducer 함수를 실행한 뒤에 하나의 결과를 반환합니다.
reducer의 형태: (accumulator, currentValue) => (반환값)
- 배열의 각 원소를 하나씩 확인하며, 각 원소는 currentValue에 해당합니다.
- 반환값은 그 이후의 원소에 대하여 accumulator에 저장됩니다.
*/
let data = [5, 2, 9, 8, 4];
// minValue 구하기 예제
let minValue = data.reduce((a, b) => Math.min(a, b));
console.log(minValue); // 2
// 원소의 합계 구하기 예제
let summary = data.reduce((a, b) => a + b);
console.log(summary); // 28

// map함수

// arr.map(function(element, index, array){  }, this);


//배열 초기화

//직접 초기화
let arr=[1,2,3,4,5];

// 한 값으로 초기화
//길이가 5, 모든 원소값이 0
let arr1=new Array(5).fill(0);


//소수점 아래특정자리에서 반올림

let x=123.451
console.log(x.toFixed(2))


//템플릿 리터럴
console.log(`hihi

asdfasdf`) 
//logs
//hihi

//asdfasdf