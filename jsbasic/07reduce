
// //array.prototype.reduce() -> 배열의 모든 원소에 대한 특정연산을 순차적으로 적용....

// /*
// reduce() 메서드는 배열의 각 요소에 대해 reducer 함수를 실행한 뒤에 하나의 결과를 반환합니다.
// reducer의 형태: (accumulator, currentValue) => (반환값)
// - 배열의 각 원소를 하나씩 확인하며, 각 원소는 currentValue에 해당합니다.
// - 반환값은 그 이후의 원소에 대하여 accumulator에 저장됩니다.
// */
let data = [5, 2, 9, 8, 4];
data= data.sort()
console.log(data)
// minValue 구하기 예제
let minValue = data.reduce((a, b) => Math.min(a, b));
console.log(minValue); // 2
// 원소의 합계 구하기 예제
let summary = data.reduce((a, b) => a + b);
console.log(summary); // 28
//평균구하기
let average= data.reduce((acc,cur,i,{length})=>{
  return i===length-1 ? (acc+cur)/length: acc+cur;},0)
console.log(average)
//최대값
const max=data.reduce((acc,cur)=>acc>cur?acc:cur)
console.log(max)
let max2=Math.max(...data)
console.log(max2)
// 요소의 중복횟수 구하기

let alpha = ['a','b','c','d','d','a','e']

const count = alpha.reduce((acc,cur)=>{
  acc[cur]=(acc[cur]||0)+1;
  return acc;
},{})
console.log(count)
